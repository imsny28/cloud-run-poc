steps:
- id: "Get Image Digest and Sign the image"
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - -c
    - |
      _LATEST_IMAGE_DIGEST=$(gcloud artifacts docker images list us-central1-docker.pkg.dev/${PROJECT_ID}/cloud-run-poc-artifact-registry/lab-22-get-customers-svc-img --format='value(version)' --include-tags --filter="tags:latest")
      echo "$${_LATEST_IMAGE_DIGEST}"

      _ALREADY_ATTESTED=$(gcloud beta container binauthz attestations list --attestor=cloud-monkey-attestor --artifact-url=us-central1-docker.pkg.dev/${PROJECT_ID}/cloud-run-poc-artifact-registry/lab-22-get-customers-svc-img-@$${_LATEST_IMAGE_DIGEST})

      if [ -z "$${_ALREADY_ATTESTED}" ]; then
        gcloud beta container binauthz attestations sign-and-create \
        --project="${PROJECT_ID}" \
        --artifact-url="us-central1-docker.pkg.dev/${PROJECT_ID}/cloud-run-poc-artifact-registry/lab-22-get-customers-svc-img@$${_LATEST_IMAGE_DIGEST}" \
        --attestor="cloud-monkey-attestor" \
        --attestor-project="${PROJECT_ID}" \
        --keyversion-project="${PROJECT_ID}" \
        --keyversion-location="us-central1" \
        --keyversion-keyring="cloud-monkey-kms-key-ring" \
        --keyversion-key="cloud-monkey-kms-key-for-binary-authorization" \
        --keyversion="1"
      fi

- id: "Deploy Cloud Run Service"
  name: 'gcr.io/cloud-builders/gcloud'
  args: [
    'alpha', 'run', 'deploy', 'lab-22-get-customers-svc', 
    '--service-account' ,'sa-customers-svc@${PROJECT_ID}.iam.gserviceaccount.com',
    '--allow-unauthenticated',
    '--memory', '256Mi',
    '--platform', 'managed',
    '--image', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cloud-run-poc-artifact-registry/lab-22-get-customers-svc-img',
    '--timeout', '30',
    '--min-instances', '0',
    '--max-instances', '1',
    '--ingress', 'all',
    '--region', 'us-central1',
    '--set-env-vars', 'CLOUD_SQL_CONNECTION_NAME=${PROJECT_ID}:us-central1:customers-db-instance',
    '--set-env-vars', 'ACCOUNTBALANCE_CLOUD_RUN_SERVICE_URL=${_ACCOUNTBALANCE_CLOUD_RUN_SERVICE_URL}',
    '--set-secrets', 'DB_USER=db-user:latest',
    '--set-secrets', 'DB_PASSWORD=db-password:latest',
    '--network' ,'default',
    '--subnet', 'default',
    '--vpc-egress', 'private-ranges-only',
    '--add-cloudsql-instances', '${PROJECT_ID}:us-central1:customers-db-instance',
    '--binary-authorization', 'default'
    ]

timeout: 600s
options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true
  